适配器模式：将一个类的接口转换成客户类希望的另一个类的接口，解决本来因为适配性导致两个类不能共同工作的问题。
场景：
翻译，将英语翻译成汉语，这样采访的时候，不懂英语的运动员就可以回答外国记者的采访了。
转接头！！！


适用场景：
一个类与另一个类的交互因为适配的问题没法直接交互的时候，可以考虑适用适配器模式虚拟构造出适配者类，
让客户端端与适配者类交互，适配者类与目标类去交互
理解，手机充电，手机连接充电器，充电器则连接插头，充电器这里充当的就是适配者类。

好处：
适配器可以充当中间处理层（比如苹果手机和安卓手机的充电口是不一样的），如果要求手机可以直接插在插口上充电的话，那插口就是各种各样的，
但是我们适用适配器模式去处理，插口只需要有一种情况就可以，让充电器充当适配者的模式，可以减少代码的复杂性。


为什么适配器模式可以通过修改操作目标类而达到请求访问的目的却选择通过适配器的模式去处理？？
1：目标类的方法可能被其他人也在使用着，修改可能带来不能预料的意外。
2：我们的目标是让两个类可以一起运行，而不是需要将两个类强耦合的纠缠在一起，使用适配器模式增加类的灵活性
(可以通过使用适配器让不能一起工作的类一起工作，也可以不影响以前使用的类。)