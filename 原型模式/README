原型模式如何实现
当你想要复制一个对象时，你可以选择遍历该对象的成员并将其复制到新对象中，
但是这样做你可能会获取不到一些私有成员，或者说你可能不清楚这个对象成员的相关依赖。
所以，可以采用原型模式来实现复制对象的操作，原型模式将复制对象的任务委托给了对象本身。

为什么要使用原型模式
当你需要复制一些对象，但是你又希望复制的对象是单独的副本，你就可以使用原型模型。
例如，当你收到第三方接口传递过来的对象时，在不了解对象信息也不想直接修改对象时，就可以使用原型模式来复制对象并进行操作。

此外，当你创建的实例差别很小时，那么你就可以使用原型模式来减少子类的数量。例如，页面模板可使用原型模式来复制生成。

* 用原型实例指向希望创建对象的类，通过拷贝这些原型创建新的对象
    * 认为php的clone方法就是实现了原型模式，通过复制操作，实现不重新new对象就可以获取新的对象。
    * 创建出来的对象会根据对象属性产生同样的对象（这里同样指的是具有相同属性），所以原型模式创建出来的对象，可能并不是个纯净的对象(这一点在sql查询的时候很容易造成问题)。
* 可能出现问题(浅复制)
    * 使用对象复制的时候，可能出现对象的属性类型如果是值类型的话，是对属性进行完整的复制(理解是在内存中重新开辟一个空间用来保存复制出来的属性),这样的话复制出来的对象和原对象在同一属性上执行内存空间的地址是不同的。
    * 但是对于属性是引用类型的时候，复制的其实是引用的地址而不是引用指向的实际的对象，也就是说复制出来的属性和原属性在内存空间中指向的地址是一样的。
* 解决方案(深复制)
    * 深复制是通过在复制对象的时候，对引用类型的属性做特殊处理(就是对这种特殊属性也做复制对象操作)，这样使得复制出来的引用类型属性在内存中的指向也是新开辟出来的内存空间。
        * 之所以说是新开辟出来的内存空间，是因为在克隆最外层对象的时候，其实对这些特殊的引用类型属性也做了特殊的克隆操作，所以会开辟出新的内存空间。
