单例模式用来保证，一个类只有一实例，并提供一个访问唯一实例的全局访问点。

所以单例模式需要解决两个问题：
1：一个类只能有一个被实例化的对象
2：控制外部怎样访问唯一实例，以及何时访问这个实例。

遇到问题：
多个请求同时请求的情况，通过简单的判断实例是否被创建以及实例的状态会出现偏差（主要是此时还没有实例化对象），可能会出现多个请求同时实例化
的情况，此时会出现多个实例。
解决方案：
通过加锁，（判断锁的）的情况，只允许第一次进行创建实例。

分类：
饿汉单例：在类被初始化的时候，就通过静态的方式实例化对象。
懒汉单例：在对象被调用的时候，才会将自己实例化。


ps：
php为了实现一个类只能有一个实例，要求修改类的构造方法（实现不能从外部通过new的方式去创建对象），修改类的__clone魔术方法，避免外部类通过
clone方式复制一个对象出来。
类还需要提供一个公开的方法用来返回类的实例（如果实例没有被创建的话，该方法还要负责创建实例）